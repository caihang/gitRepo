git:
工作区 -> 暂存区stage -> master分支（初始化时HEAD默认指向master分支) #暂存区和分支统称为版本库

1.初始化仓库：git init
2.添加文件到暂存区:git add file1[, file2,...]  #如果要提交全部，则file改为.
3.提交暂存区文件到当前分支:git commit [-m '本次提交说明，精准简短']  #commit类似于快照功能
4.查看当前仓库状态:git status 该命令查询哪些文件被修改过但还没准备提交
5.查看修改信息:git diff
6.查看提交历史记录:git log [--pretty=oneline]
7.版本回退:git reset --hard <HEAD^/HEAD^^/HEAD~n/commit_id> #依次是退回到上一个/上上一个／前第n个/commit_id指向的版本
8.查看所有使用过的git命令记录:git reflog #此命令用来查找之前的commit_id来回退版本
9.查看工作区和版本库里某个文件的不同:git diff HEAD -- file_name #有修改的地方会以红色标明上一次提交的结果，以绿色表明当前工作区的修改
10.撤销工作区的修改以回到修改之前的状态:git checkout -- file_name  #其实是用版本库里的替换工作区里的
11.撤销暂存区的修改将其放回到工作区:git reset HEAD file_name, 然后就可以使用git checkout -- file_name， 注意：在这里执行这一步时会退回到最后一次commit的版本
12.撤销提交到分支的文件:使用版本回退，前提是未推送到远程
13.从版本库删除文件:git rm file_name  #如果一个文件被commit到版本库，在工作区误删都可以恢复，但只能恢复到最新版本，会丢失最近一次提交后修改的内容